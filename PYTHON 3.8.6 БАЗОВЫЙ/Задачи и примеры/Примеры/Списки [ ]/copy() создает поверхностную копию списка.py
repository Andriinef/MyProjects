""" copy() создаёт поверхностную копию списка
"""
a = [1, 2, 3]
# Скопировать список присваиванием нельзя.
# Обе переменные связаны
# с одним и тем же объектом.
b = a
print("b is a?", b is a)
# Поэтому изменение списка через
# одну переменную
b[0] = 10
# видны через другую.
print("a now:", a)

# Чтобы скопировать список
# используется метод copy()
b = a.copy()
# Теперь a и b указывают
# на разные списки.
print("b is a?", b is a)
# При изменении одного списка
# другой не изменится.
a[0] = 1
print("a:", a)
print("b:", b)

print("---------")

a = [1, [2, 3], 4]
# Однако метод copy() создаёт только
# поверхностную копию объекта.
# Это значит, что если элемент объекта
# является составным, то копируется
# не сам элемент, а ссылка на него.
b = a.copy()
b[0] = 42
# Поэтому изменения такого элемента
# изменяет оба списка,
# в которых есть ссылка на него.
b[1][1] = 100
print("a:", a)
print("b:", b)
print("b is a?", b is a)
print("b[1] is a[1]?", b[1] is a[1])
# b is a? True
# a now: [10, 2, 3]
# b is a? False
# a: [1, 2, 3]
# b: [10, 2, 3]
# ---------
# a: [1, [2, 100], 4]
# b: [42, [2, 100], 4]
# b is a? False
# b[1] is a[1]? True
